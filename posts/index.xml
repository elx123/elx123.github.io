<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HACKER</title>
    <link>https://elx123.github.io/posts/</link>
    <description>Recent content in Posts on HACKER</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 15 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://elx123.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>windows内核以及驱动</title>
      <link>https://elx123.github.io/posts/windows/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/windows/</guid>
      <description>简介 之前一段时间一直在研究windows相关的技术(驱动,kernel mode debug,user mode debug) 接下来一段时间我会慢慢记录下之前一些书籍和资料 补上相关知识 这本</description>
    </item>
    
    <item>
      <title>gpc learning</title>
      <link>https://elx123.github.io/posts/rpclearning/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/rpclearning/</guid>
      <description>简介 grpc 学习记录 学习视频 Master Class: Build Modern API and Microservices</description>
    </item>
    
    <item>
      <title>redis/go-redis入门</title>
      <link>https://elx123.github.io/posts/redis/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/redis/</guid>
      <description>简介 最近开始研究redis 资料 视频课程Rapid redis golang下驱动https://github.com/go-redis/redis red</description>
    </item>
    
    <item>
      <title>学习总结</title>
      <link>https://elx123.github.io/posts/golangrelearning/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/golangrelearning/</guid>
      <description>简介 自从去年开始使用golang以后,陆陆续续在不断学习(包括操作系统和其他方面),这里总结与分享下重要的资料和知识 所有视频资料都在orei</description>
    </item>
    
    <item>
      <title>工作3年经验总结</title>
      <link>https://elx123.github.io/posts/%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/%E6%80%BB%E7%BB%93/</guid>
      <description>简介 记录下自己在it行业工作3年的经验 内容 不要老想着去什么什么公司就能增涨技术,增涨经验,如今互联网如此发达,只要有时间有一台电脑,没有什么</description>
    </item>
    
    <item>
      <title>Excel学习</title>
      <link>https://elx123.github.io/posts/excellearning/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/excellearning/</guid>
      <description>简介 excel学习进度总结 通过百度网盘的形式在国内观看 https://pan.baidu.com/s/1QB4DAawv3-Kxk4WM29TFUA 密码yi6s 目录 Excel Finance Class 01: Intro To Excel 2007 &amp;amp; 2010(excel 金融课程01 : 介绍excel2007 2010) 视频地址(</description>
    </item>
    
    <item>
      <title>&#34;About&#34;</title>
      <link>https://elx123.github.io/posts/about/</link>
      <pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/about/</guid>
      <description>人生苦短,只争朝夕,浮生若梦,为欢几何</description>
    </item>
    
    <item>
      <title>Golang Sort</title>
      <link>https://elx123.github.io/posts/golang_sort/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/golang_sort/</guid>
      <description>简介 在实际项目中用到对结构按结构体中的某个字段进行排序，记录下使用心得 示例 首先定义数据结构，为了能清楚说明问题，只给两个字段。 type User struct { Name string Score</description>
    </item>
    
    <item>
      <title>Weighted Random Selection</title>
      <link>https://elx123.github.io/posts/weightsort/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/weightsort/</guid>
      <description>简介 最近在项目中遇到了加密权重算法,记录下使用心得 问题描述 Given a list of items where each item has a weight (integer value), select a random item from the list based on that weight. The key requirement — items with a higher weight value are more likely to be returned. So</description>
    </item>
    
    <item>
      <title>[转载]Golang Json库源码</title>
      <link>https://elx123.github.io/posts/golang_json/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/golang_json/</guid>
      <description>简介 最近发现一篇关于golang原生Json库的文章,转载过来 https://zhuanlan.zhihu.com/p/37165706 介绍 encoding/json库的意义相对其他语言来说在Golang中尤其重</description>
    </item>
    
    <item>
      <title>Golang位运算符的溢出情况</title>
      <link>https://elx123.github.io/posts/golang_%3c%3c/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/golang_%3c%3c/</guid>
      <description>简介 在编码过程中,经常会遇到使用逻辑运算符的情况,其中对于溢出操作需要特别小心 介绍 编译型语言，编译器的静态求值是自然的。 必须使用强制类型转换</description>
    </item>
    
    <item>
      <title>go包管理器</title>
      <link>https://elx123.github.io/posts/package/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/package/</guid>
      <description>简介 分别记录下glide和dep的使用心得 问题描述 如果公司存在多个版本库,那么控制第三方包的版本能有效降低风险 使用心得 glide glide.yaml</description>
    </item>
    
    <item>
      <title>Tcp分包</title>
      <link>https://elx123.github.io/posts/tcp_subcontracting/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/tcp_subcontracting/</guid>
      <description>简介 如今的游戏服务器框架都会涉及到Tcp分包,今天记录下自己的心得 问题描述 Tcp长连接,通过分包解决粘包问题 解法一(peek方式) 大体思路:</description>
    </item>
    
    <item>
      <title>优先队列</title>
      <link>https://elx123.github.io/posts/priorityqueue/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/priorityqueue/</guid>
      <description>简介 最近在多个框架中遇到优先队列,在这里记录下原理 实现方式 堆 目前只知道顺序数组可以用来作为heap底层结构,以实现优先队列 实现 // An Item is something we manage</description>
    </item>
    
    <item>
      <title>读写锁(RWLock),递归锁(reentrant)和互斥锁(mutex)</title>
      <link>https://elx123.github.io/posts/rwlockandrecursive/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/rwlockandrecursive/</guid>
      <description>简介 这里介绍下我对于3种锁的使用观点 个人观点 个人观点尽量使用互斥锁,因为递归锁和读写锁的复杂度,下面举出几种错误例子 递归锁 #include &amp;#34;../Mutex.h&amp;#34;#include &amp;#34;../Thread.h&amp;#34;#include &amp;lt;vector&amp;gt;#include &amp;lt;stdio.h&amp;gt; using namespace muduo; class</description>
    </item>
    
    <item>
      <title>Golang float</title>
      <link>https://elx123.github.io/posts/float64/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/float64/</guid>
      <description>最近在工作遇到float的精度问题,记录下解决思路 简介 浮点数数据格式有许多种,IEEE754标准的浮点数与IBM格式浮点数用的比较多 Go提供</description>
    </item>
    
    <item>
      <title>[转载]mgo 的 session 与连接池</title>
      <link>https://elx123.github.io/posts/mgoandsession/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/mgoandsession/</guid>
      <description>简介 最近发现一篇关于mgo连接池很有价值的文章,转载过来 https://cardinfolink.github.io/2017/05/17/mgo-session/ 介绍 mgo是由Golang编写的开源mongodb驱动。由于mongodb官方并没</description>
    </item>
    
    <item>
      <title>go-mgo/mgo入门</title>
      <link>https://elx123.github.io/posts/mgo/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/mgo/</guid>
      <description>简介 在游戏服务器开发这一块,nosql越来越流行,今天就来开一篇关于如何使用go-mgo/mgo的文章 源码 https://github.com/go-mgo/mgo 使用Select方法和struc</description>
    </item>
    
    <item>
      <title>推荐几本数据库相关的书籍</title>
      <link>https://elx123.github.io/posts/recommendbook/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/recommendbook/</guid>
      <description>简介 sql 推荐几本数据库方面的书籍,不包括数据库设计,只关心如何在业务层面更好的使用数据库同时兼顾性能 &amp;lt;&amp;lt;Baron Schwartz, Peter Zaitsev, Vadim Tkachenko-High Performance MySQL, 3rd Edition_ Optimization, Backups, and Replication-O&amp;#39;Reilly Media (2012).pdf&amp;gt;&amp;gt; &amp;lt;&amp;lt;Clare Churcher-Beginning Database Design-Apress (2007).pdf&amp;gt;&amp;gt;</description>
    </item>
    
    <item>
      <title>MySQL Benchmark Tool</title>
      <link>https://elx123.github.io/posts/sysbench/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://elx123.github.io/posts/sysbench/</guid>
      <description>sysbench sysbench是mysql的一款性能测试工具,最近试着使用了一下,感觉不错,并记录下流程 源码地址 https://github.com/akopytov/sysbench 部分参数涵义(github) events Limit for total number</description>
    </item>
    
  </channel>
</rss>
